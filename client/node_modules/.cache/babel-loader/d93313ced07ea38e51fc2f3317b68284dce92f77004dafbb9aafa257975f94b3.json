{"ast":null,"code":"(function (root, factory) {\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define(function () {\n      return factory(root);\n    });\n  } else if (typeof module == 'object' && module && module.exports) {\n    module.exports = factory(root);\n  } else {\n    root.Levenshtein = factory(root);\n  }\n})(this, function (root) {\n  function forEach(array, fn) {\n    var i, length;\n    i = -1;\n    length = array.length;\n    while (++i < length) fn(array[i], i, array);\n  }\n  function map(array, fn) {\n    var result;\n    result = Array(array.length);\n    forEach(array, function (val, i, array) {\n      result[i] = fn(val, i, array);\n    });\n    return result;\n  }\n  function reduce(array, fn, accumulator) {\n    forEach(array, function (val, i, array) {\n      accumulator = fn(val, i, array);\n    });\n    return accumulator;\n  }\n\n  // Levenshtein distance\n  function Levenshtein(str_m, str_n) {\n    var previous, current, matrix;\n    // Constructor\n    matrix = this._matrix = [];\n\n    // Sanity checks\n    if (str_m == str_n) return this.distance = 0;else if (str_m == '') return this.distance = str_n.length;else if (str_n == '') return this.distance = str_m.length;else {\n      // Danger Will Robinson\n      previous = [0];\n      forEach(str_m, function (v, i) {\n        i++, previous[i] = i;\n      });\n      matrix[0] = previous;\n      forEach(str_n, function (n_val, n_idx) {\n        current = [++n_idx];\n        forEach(str_m, function (m_val, m_idx) {\n          m_idx++;\n          if (str_m.charAt(m_idx - 1) == str_n.charAt(n_idx - 1)) current[m_idx] = previous[m_idx - 1];else current[m_idx] = Math.min(previous[m_idx] + 1 // Deletion\n          , current[m_idx - 1] + 1 // Insertion\n          , previous[m_idx - 1] + 1 // Subtraction\n          );\n        });\n        previous = current;\n        matrix[matrix.length] = previous;\n      });\n      return this.distance = current[current.length - 1];\n    }\n  }\n  Levenshtein.prototype.toString = Levenshtein.prototype.inspect = function inspect(no_print) {\n    var matrix, max, buff, sep, rows;\n    matrix = this.getMatrix();\n    max = reduce(matrix, function (m, o) {\n      return Math.max(m, reduce(o, Math.max, 0));\n    }, 0);\n    buff = Array((max + '').length).join(' ');\n    sep = [];\n    while (sep.length < (matrix[0] && matrix[0].length || 0)) sep[sep.length] = Array(buff.length + 1).join('-');\n    sep = sep.join('-+') + '-';\n    rows = map(matrix, function (row) {\n      var cells;\n      cells = map(row, function (cell) {\n        return (buff + cell).slice(-buff.length);\n      });\n      return cells.join(' |') + ' ';\n    });\n    return rows.join(\"\\n\" + sep + \"\\n\");\n  };\n  Levenshtein.prototype.getMatrix = function () {\n    return this._matrix.slice();\n  };\n  Levenshtein.prototype.valueOf = function () {\n    return this.distance;\n  };\n  return Levenshtein;\n});","map":{"version":3,"names":["root","factory","define","amd","module","exports","Levenshtein","forEach","array","fn","i","length","map","result","Array","val","reduce","accumulator","str_m","str_n","previous","current","matrix","_matrix","distance","v","n_val","n_idx","m_val","m_idx","charAt","Math","min","prototype","toString","inspect","no_print","max","buff","sep","rows","getMatrix","m","o","join","row","cells","cell","slice","valueOf"],"sources":["/Users/glebch/workprojects/baumna/client/node_modules/levenshtein/lib/levenshtein.js"],"sourcesContent":["(function(root, factory){\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define(function(){\n      return factory(root);\n    });\n  } else if (typeof module == 'object' && module && module.exports) {\n    module.exports = factory(root);\n  } else {\n    root.Levenshtein = factory(root);\n  }\n}(this, function(root){\n\n  function forEach( array, fn ) { var i, length\n    i = -1\n    length = array.length\n    while ( ++i < length )\n      fn( array[ i ], i, array )\n  }\n\n  function map( array, fn ) { var result\n    result = Array( array.length )\n    forEach( array, function ( val, i, array ) {\n      result[i] = fn( val, i, array )\n    })\n    return result\n  }\n\n  function reduce( array, fn, accumulator ) {\n    forEach( array, function( val, i, array ) {\n      accumulator = fn( val, i, array )\n    })\n    return accumulator\n  }\n\n  // Levenshtein distance\n  function Levenshtein( str_m, str_n ) { var previous, current, matrix\n    // Constructor\n    matrix = this._matrix = []\n\n    // Sanity checks\n    if ( str_m == str_n )\n      return this.distance = 0\n    else if ( str_m == '' )\n      return this.distance = str_n.length\n    else if ( str_n == '' )\n      return this.distance = str_m.length\n    else {\n      // Danger Will Robinson\n      previous = [ 0 ]\n      forEach( str_m, function( v, i ) { i++, previous[ i ] = i } )\n\n      matrix[0] = previous\n      forEach( str_n, function( n_val, n_idx ) {\n        current = [ ++n_idx ]\n        forEach( str_m, function( m_val, m_idx ) {\n          m_idx++\n          if ( str_m.charAt( m_idx - 1 ) == str_n.charAt( n_idx - 1 ) )\n            current[ m_idx ] = previous[ m_idx - 1 ]\n          else\n            current[ m_idx ] = Math.min\n              ( previous[ m_idx ]     + 1   // Deletion\n              , current[  m_idx - 1 ] + 1   // Insertion\n              , previous[ m_idx - 1 ] + 1   // Subtraction\n              )\n        })\n        previous = current\n        matrix[ matrix.length ] = previous\n      })\n\n      return this.distance = current[ current.length - 1 ]\n    }\n  }\n\n  Levenshtein.prototype.toString = Levenshtein.prototype.inspect = function inspect ( no_print ) { var matrix, max, buff, sep, rows\n    matrix = this.getMatrix()\n    max = reduce( matrix,function( m, o ) {\n      return Math.max( m, reduce( o, Math.max, 0 ) )\n    }, 0 )\n    buff = Array( ( max + '' ).length ).join( ' ' )\n\n    sep = []\n    while ( sep.length < (matrix[0] && matrix[0].length || 0) )\n      sep[ sep.length ] = Array( buff.length + 1 ).join( '-' )\n    sep = sep.join( '-+' ) + '-'\n\n    rows = map( matrix, function( row ) { var cells\n      cells = map( row, function( cell ) {\n        return ( buff + cell ).slice( - buff.length )\n      })\n      return cells.join( ' |' ) + ' '\n    })\n\n    return rows.join( \"\\n\" + sep + \"\\n\" )\n  }\n\n  Levenshtein.prototype.getMatrix = function () {\n    return this._matrix.slice()\n  }\n\n  Levenshtein.prototype.valueOf = function() {\n    return this.distance\n  }\n\n  return Levenshtein\n\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}